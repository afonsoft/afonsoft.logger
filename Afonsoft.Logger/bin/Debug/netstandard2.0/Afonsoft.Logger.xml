<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Afonsoft.Logger</name>
    </assembly>
    <members>
        <member name="T:Afonsoft.Logger.AfonsoftLoggerExtensions">
            <summary>
            LoggerExtensions
            </summary>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerExtensions.AddAfonsoftLoggerProvider``1(Microsoft.Extensions.Logging.ILoggingBuilder)">
            <summary>
            ILoggingBuilder AddAfonsoftLoggerProvider
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerExtensions.AddAfonsoftLoggerProvider(Microsoft.Extensions.Logging.ILoggingBuilder,System.String)">
            <summary>
            ILoggingBuilder AddAfonsoftLoggerProvider
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerExtensions.AddAfonsoftLoggerProvider(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            ILoggingBuilder AddAfonsoftLoggerProvider
            </summary>
            <param name="builder"></param>
            <param name="categoryName"></param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerExtensions.AddAfonsoftLoggerProvider``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            ILoggingBuilder AddAfonsoftLoggerProvider
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerExtensions.AddAfonsoftLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            ILoggerFactory AddAfonsoftLogger
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loggerFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerExtensions.AddAfonsoftLogger``1(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            ILoggerFactory AddAfonsoftLogger
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loggerFactory"></param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerExtensions.AddAfonsoftLogger(Microsoft.Extensions.Logging.ILoggerFactory,System.String)">
            <summary>
            ILoggerFactory AddAfonsoftLogger
            </summary>
            <param name="loggerFactory"></param>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerExtensions.AddAfonsoftLogger(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            ILoggerFactory AddAfonsoftLogger
            </summary>
            <param name="loggerFactory"></param>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerExtensions.AddAfonsoftLogging``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            IServiceCollection AddAfonsoftLogging
            </summary>
            <typeparam name="T"></typeparam>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerExtensions.AddAfonsoftLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            IServiceCollection AddAfonsoftLogging
            </summary>
            <param name="services"></param>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerExtensions.AddAfonsoftLogging``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            IServiceCollection AddAfonsoftLogging
            </summary>
            <typeparam name="T"></typeparam>
            <param name="services"></param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerExtensions.AddAfonsoftLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            IServiceCollection AddAfonsoftLogging
            </summary>
            <param name="services"></param>
            <param name="categoryName"></param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Afonsoft.Logger.Logger`1" -->
        <member name="M:Afonsoft.Logger.Logger`1.#ctor(Afonsoft.Logger.LoggerRepository,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.String)">
            <summary>
            
            </summary>
            <param name="repository"></param>
            <param name="filter"></param>
            <param name="categoryName"></param>
        </member>
        <member name="M:Afonsoft.Logger.Logger`1.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
            
            </summary>
            <typeparam name="TState"></typeparam>
            <param name="logLevel"></param>
            <param name="eventId"></param>
            <param name="state"></param>
            <param name="exception"></param>
            <param name="formatter"></param>
        </member>
        <member name="M:Afonsoft.Logger.Logger`1.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            
            </summary>
            <param name="logLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.Logger`1.BeginScope``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="TState"></typeparam>
            <param name="state"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Afonsoft.Logger.AfonsoftLoggerProvider`1" -->
        <member name="P:Afonsoft.Logger.AfonsoftLoggerProvider`1.IncludeScopes">
            <summary>
            IncludeScopes
            </summary>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider`1.#ctor(System.String,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            LoggerProvider
            </summary>
            <param name="categoryName"></param>
            <param name="filter"></param>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider`1.#ctor(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            LoggerProvider
            </summary>
            <param name="filter"></param>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider`1.#ctor">
            <summary>
            LoggerProvider
            </summary>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider`1.CreateLogger(System.String)">
            <summary>
            CreateLogger
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider`1.CreateLogger">
            <summary>
            CreateLogger
            </summary>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider`1.CreateLogger``1">
            <summary>
            CreateLogger
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider`1.CreateLogger(System.String,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            CreateLogger
            </summary>
            <param name="filter"></param>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider`1.CreateLogger``1(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            CreateLogger
            </summary>
            <typeparam name="T1"></typeparam>
            <param name="categoryName"></param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider`1.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Afonsoft.Logger.AfonsoftLoggerProvider" -->
        <member name="P:Afonsoft.Logger.AfonsoftLoggerProvider.IncludeScopes">
            <summary>
            IncludeScopes
            </summary>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider.#ctor(System.String,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            LoggerProvider
            </summary>
            <param name="categoryName"></param>
            <param name="filter"></param>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider.#ctor">
            <summary>
            LoggerProvider
            </summary>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider.CreateLogger(System.String)">
            <summary>
            CreateLogger
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider.CreateLogger">
            <summary>
            CreateLogger
            </summary>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider.CreateLogger``1">
            <summary>
            CreateLogger
            </summary>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider.CreateLogger(System.String,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            CreateLogger
            </summary>
            <param name="filter"></param>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider.CreateLogger``1(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            CreateLogger
            </summary>
            <param name="filter"></param>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.AfonsoftLoggerProvider.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Afonsoft.Logger.LoggerRepository" -->
        <member name="M:Afonsoft.Logger.LoggerRepository.LogAsync``1(System.String,System.Reflection.MethodBase,System.String,System.String,System.Exception,System.Object[])">
            <summary>
            
            </summary>
            <typeparam name="TState"></typeparam>
            <param name="categoryName"></param>
            <param name="methodBase"></param>
            <param name="type"></param>
            <param name="message"></param>
            <param name="exception"></param>
            <param name="debugData"></param>
        </member>
        <member name="M:Afonsoft.Logger.LoggerRepository.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Afonsoft.Logger.Logger" -->
        <member name="M:Afonsoft.Logger.Logger.#ctor(Afonsoft.Logger.LoggerRepository,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.String)">
            <summary>
            
            </summary>
            <param name="repository"></param>
            <param name="filter"></param>
            <param name="categoryName"></param>
        </member>
        <member name="M:Afonsoft.Logger.Logger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
            
            </summary>
            <typeparam name="TState"></typeparam>
            <param name="logLevel"></param>
            <param name="eventId"></param>
            <param name="state"></param>
            <param name="exception"></param>
            <param name="formatter"></param>
        </member>
        <member name="M:Afonsoft.Logger.Logger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            
            </summary>
            <param name="logLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Afonsoft.Logger.Logger.BeginScope``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="TState"></typeparam>
            <param name="state"></param>
            <returns></returns>
        </member>
    </members>
</doc>
